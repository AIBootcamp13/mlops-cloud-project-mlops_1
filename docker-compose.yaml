version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    env_file:
      - ./datapipeline/.env
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      retries: 5
    networks:
      - airflow

  airflow-init:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./datapipeline/.env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      PYTHONPATH: /opt/airflow
    volumes:
      - ./datapipeline/airflow/dags:/opt/airflow/dags
      - ./datapipeline/src:/opt/airflow/src
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./datapipeline/data:/opt/airflow/data
    command: >
      bash -c "airflow db migrate &&
               airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email admin@example.com"
    networks:
      - airflow

  airflow-webserver:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-webserver
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    env_file:
      - ./datapipeline/.env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      PYTHONPATH: /opt/airflow
    volumes:
      - ./datapipeline/airflow/dags:/opt/airflow/dags
      - ./datapipeline/src:/opt/airflow/src
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./datapipeline/data:/opt/airflow/data
    entrypoint: ["airflow", "webserver"]
    restart: always
    networks:
      - airflow

  airflow-scheduler:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    env_file:
      - ./datapipeline/.env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      PYTHONPATH: /opt/airflow
    volumes:
      - ./datapipeline/airflow/dags:/opt/airflow/dags
      - ./datapipeline/src:/opt/airflow/src
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./datapipeline/data:/opt/airflow/data
    command: scheduler
    restart: always
    networks:
      - airflow

volumes:
  postgres-db-volume:

networks:
  airflow: